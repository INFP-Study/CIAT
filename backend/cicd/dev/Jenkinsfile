pipeline {
    agent any
    tools {gradle "gradle"}

    environment {
        APP_NAME = "siat-backend-dev"
        NAMESPACE = "infp"
        DOCKER_IMAGE = "siat-dev-backend"
        TAG = "${BUILD_NUMBER}"
        DOCKER_IMAGENAME = "${DOCKER_IMAGE}:${TAG}"
        SVCTYPE = "NodePort"
        NODEPORT = "30506"
        JASYPT_KEY = credentials('SIAT_DEV_JASYPT')
        MODE = "dev"
    }

    stages {
        stage('project build'){
            steps{
                dir('backend'){
                    withGradle {
                        sh 'gradle clean build --exclude-task test'
                    }
                }
            }
        }
        stage('docker build&push'){
            steps{
                dir('backend'){
                    sh 'rm -rf ./Dockerfile Jenkinsfile charts'
                    sh 'cp -rf cicd/dev/* ./'
                    withCredentials([string(credentialsId: 'dockerID', variable: 'dockerID')]) {
                        script{
                            sh 'docker build -t ${dockerID}/${DOCKER_IMAGENAME} .'
                            // 비용문제로 주석
                            // withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'dockerpassword', usernameVariable: 'dockeruser')]) {
                            //     sh 'docker login -u ${dockeruser} -p ${dockerpassword}'
                            //     sh 'docker push ${dockerID}/${DOCKER_IMAGENAME}'
                            // }
                        }
                    }
                }
            }
        }
        stage('deploy'){
            steps{
                dir('backend'){
                    withCredentials([string(credentialsId: 'dockerID', variable: 'dockerID')]) {
                        sh 'sed -i "s/__IMAGENAME__/${dockerID}\\/${DOCKER_IMAGE}/g" charts/values.yaml'
                        sh 'sed -i "s/__TAGNAME__/${TAG}/g" charts/values.yaml'
                        sh 'sed -i "s/__JASYPT__/${JASYPT_KEY}/g" charts/values.yaml'
                        sh 'sed -i "s/__SVCTYPE__/${SVCTYPE}/g" charts/values.yaml'
                        sh 'sed -i "s/__NODEPORT__/${NODEPORT}/g" charts/values.yaml'
                        sh 'sed -i "s/__MODE__/${MODE}/g" charts/values.yaml'
                        sh "helm upgrade --install --namespace ${NAMESPACE} ${APP_NAME} ./charts"
                    }
                }
            }
        }
    }
}
