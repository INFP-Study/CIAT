name: backend-dev-CICD

on:
  push:
    branches:
      - "develop"

env:
  dockerimage_tag: ${{ github.sha }}
  dockerimage_name: choisunguk/siat-dev-backend:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    # 1. git submodule을 이용해서 스프링부트 프로파일 복사
    # 2. 스프링부트 프로젝트 빌드
    # 3. docker build
    # 4. docker push
    steps:
    - uses: actions/checkout@v2
      with:
        ssh-key: ${{ secrets.GITHUBACTION_KEY }}
        submodules: 'recursive'
        
    - name: copy springboot profile
      run: |
        cp ./src/main/resources/CIAT_private/springboot/application-dev.yaml ./src/main/resources/application-dev.yaml 
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github
        settings-path: ${{ github.workspace }}
    
    - name: gradle build
      run: |
        gradle clean build --exclude-task test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: copy dockerfile
      run: |
        rm -rf ./Dockerfile
        cp ./cicd/dev/Dockerfile ./Dockerfile

    - name: Build and push
      id: docker_build
      run: |
        docker build -t ${{ env.dockerimage_name }} .
        docker push ${{ env.dockerimage_name }}
    
    - name: Discord Alert Success
      uses: sarisia/actions-status-discord@v1
      if: success()
      with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: "🎉 테스트 되었습니다!"

    - name: Discord Alert Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: "🔥 테스트를 실패하였습니다."

    - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      if: ${{ always() }}
      run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
  
  update-argocd-metadata:
    needs: build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./dev/backend

    steps:      
      - uses: actions/checkout@v2
        with:
          ref: "charts"
          ssh-key: ${{ secrets.GITHUBACTION_KEY }}
          submodules: 'recursive'
      
      - name: change override_values.yaml
        run: |
          cat <<EOF > override_values.yaml
          image:
            tag: ${{ env.dockerimage_tag }}
          EOF

      - name: git push
        run: |
          git config --global user.email "GitHub Actions Bot@github.com"
          git config --global user.name "GitHub Actions Bot"
          git add override_values.yaml
          git commit -m "change dockertag"
          git pull origin charts
          git push origin charts
